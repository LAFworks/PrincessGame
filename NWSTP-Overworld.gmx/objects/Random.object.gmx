<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.has_triggered =false; 
step_trigg =false;

global.combat_floor = 74
global.trap_floor = 79
global.merchant_floor = 84
global.event_floor = 89
global.loot_floor = 94

global.player_inventory = ds_list_create();
//Created map for player inventory
//For testing will add a weapons to the inventory and equip them
ds_list_add(global.player_inventory, "Sword", 1);
//This value keeps track of the number of an item a player has in their inventory
global.item_list = ds_list_create();
ds_list_add(global.item_list, "Sword", 5);
//Adds to the total item list for testing will be loaded in the future
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.has_triggered = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Debug for combat
if (keyboard_check_direct(ord('A')) or keyboard_check_direct(ord('W')) or keyboard_check_direct(ord('D')) or keyboard_check_direct(ord('S')))
{
    //show_debug_message("Not working");
    if (global.has_triggered == false and obj_player_overworld.isMoving == false)
    {   
        inp= irandom(99);
        if (inp &gt;=global.combat_floor and inp &lt; global.trap_floor)
        { 
            //Random number for combat encounter
            while(true)
            {
                enc = irandom(0);
                enc = 4 * enc + enc;
                g=0; 
                global.enemy_name1 = ds_list_find_value(global.monsters, enc);
                for (i=0; i &lt; ds_list_find_value(global.encounter, enc+2); ++i)
                {
                    if (i==0)
                    {
                        global.e1_health = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+1)+1);
                        global.e1_attack = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+1)+2);
                        global.e1_speed = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+1)+3);
                        global.e1_accuracy = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+1)+4);
                        global.e1_name = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+1));
                    }
                    else if (i==1)
                    {
                        global.e2_health = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+1)+1);
                        global.e2_attack = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+1)+2);
                        global.e2_speed = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+1)+3);
                        global.e2_accuracy = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+1)+4);
                        global.e2_name = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+1));
                    }
                    else if (i==2)
                    {
                        global.e3_health = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+1)+1);
                        global.e3_attack = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+1)+2);
                        global.e3_speed = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+1)+3);
                        global.e3_accuracy = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+1)+4);
                        global.e3_name = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+1));
                    }
                    else if (i==3)
                    {
                        global.e4_health = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+1)+1);
                        global.e4_attack = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+1)+2);
                        global.e4_speed = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+1)+3);
                        global.e4_accuracy = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+1)+4);
                        global.e4_name = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+1));
                    }
                    else if (i==4)
                    {
                        global.e5_health = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+1)+1);
                        global.e5_attack = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+1)+2);
                        global.e5_speed = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+1)+3);
                        global.e5_accuracy = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+1)+4);
                        global.e5_name = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+1));
                    }
                    g= i;
                }
                //Handle if there are multiple enemy types
                for (i = g; i &lt; ds_list_find_value(global.encounter, enc+4); ++i)
                {
                    if (i==0)
                    {
                        global.e1_health = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+3)+1);
                        global.e1_attack = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+3)+2);
                        global.e1_speed = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+3)+3);
                        global.e1_accuracy = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+3)+4);
                        global.e1_name = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+3));
                    }
                    else if (i==1)
                    {
                        global.e2_health = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+3)+1);
                        global.e2_attack = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+3)+2);
                        global.e2_speed = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+3)+3);
                        global.e2_accuracy = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+3)+4);
                        global.e2_name = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+3));
                    }
                    else if (i==2)
                    {
                        global.e3_health = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+3)+1);
                        global.e3_attack = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+3)+2);
                        global.e3_speed = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+3)+3);
                        global.e3_accuracy = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+3)+4);
                        global.e3_name = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+3));
                    }
                    else if (i==3)
                    {
                        global.e4_health = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+3)+1);
                        global.e4_attack = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+3)+2);
                        global.e4_speed = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+3)+3);
                        global.e4_accuracy = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+3)+4);
                        global.e4_name = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+3));
                    }
                    else if (i==4)
                    {
                        global.e5_health = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+3)+1);
                        global.e5_attack = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+3)+2);
                        global.e5_speed = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+3)+3);
                        global.e5_accuracy = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+3)+4);
                        global.e5_name = ds_list_find_value(global.monsters, ds_list_find_value(global.encounter, enc+3));
                    }
                }
                break;
            }
            
            room_goto(rm_combat);
        }   //Combat
        
        else if (inp &gt;=global.trap_floor and inp &lt; global.merchant_floor)
        {
            room_goto(rm_trap);
        }   //Traps
        
        else if (inp &gt;=global.merchant_floor and inp &lt; global.event_floor)
        {
            room_goto(rm_merchant);
        }   //Merchant
        
        else if (inp &gt;=global.event_floor and inp &lt; global.loot_floor)
        {
            room_goto(rm_event);
        }   //Event
        
        else if (inp &gt;=global.loot_floor and inp &lt; 99)
        {
            room_goto(rm_loot);
        }   //Loot   
        else
        {
            global.has_triggered = true;
            alarm[0]=30;
        }
        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 150;

global.e1_health = 0;
global.e1_attack = 0;
global.e1_speed = 0;
global.e1_accuracy = 0;
global.e1_name= "";

global.e2_health = 0;
global.e2_attack = 0;
global.e2_speed = 0;
global.e2_accuracy = 0;
global.e2_name= "";

global.e3_health = 0;
global.e3_attack = 0;
global.e3_speed = 0;
global.e3_accuracy = 0;
global.e3_name= "";

global.e4_health = 0;
global.e4_attack = 0;
global.e4_speed = 0;
global.e4_accuracy = 0;
global.e4_name= "";

global.e5_health = 0;
global.e5_attack = 0;
global.e5_speed = 0;
global.e5_accuracy = 0;
global.e5_name= "";



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
