<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Global "scr_textbox" Variables

global.txtCache = "";
global.txtIndex = 1; // For use in the "scr_textbox" script. (Don't mess with this)
global.display_txt = ""; // For use in the "scr_textbox" script. Printed letters on screen.
global.maxPrintTimer = 2; // How fast each indivual letter will print 
global.printTimer = 0; // ""
global.tboxActive = false; // Is the textbox active in the game? is someone speaking? (use this variable to pause events... or not)
global.placeholderTxt = ""; // For use in the "scr_textbox" script. (Don't mess with this)
global.temp_placeholderTxt = ""; // For use in the "scr_textbox" script. (Don't mess with this)
global.hasMenu = true; //will tell script to execute menu printing code

//For the automated dialogue boxes
global.timer = 0;
global.auto = false;

wait = true;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///menu options
menu[0] = "Attack the cutpurses.";
menu[1] = "Enjoy the show.";

menu0[0] = "";
menu0[1] = "";
menu0[2] = "";
menu0[3] = "";
//vertical space between menu items, for drawing's sake
space = 64;
//menu sprite position 
mpos = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Strings
sampleText = "You decide to rest for the night and enter a nearby inn. 

A robed conjurer stands in the center of the packed crowd of inn patrons. He waves his hands in grand gestures, performing feats of minor prestidigitation. Not quite impressed, you instead scan the crowd and notice two gnolls picking pockets and cutting purses. They must be confederates of this performer.";
sampleText2 = "You draw your weapons and exclaim that the mage is nothing more than a thief. People within the crowd pat themselves down and notice that their pockets and purses are considerably lighter. The wizard cries out in rage and sprints toward you, followed by his companions. The crowd quickly disperses as you find yourself in the midst of a battle.";
sampleText3 = "Better to not draw attention. After all, they seem smart enough not to rob armed patrons. You watch as the wizard shoots sparks from his hands and applaud when appropriate.";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(rm_combat);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wait = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///cursor movement on menu

var move = 0;
//moves along y-coordinates (up and down)
move -= max(keyboard_check_pressed(vk_up), keyboard_check_pressed(ord("W")),0);

//x-coord
move += max(keyboard_check_pressed(vk_down), keyboard_check_pressed(ord("s")),0);

if (move != 0)
{
    mpos += move;
    //wrap around for out-of-bounds
    if (mpos &lt; 0)
    {
        mpos = array_length_1d(menu) -1;
    }
    if (mpos &gt; array_length_1d(menu) -1)
    { 
        mpos = 0
    }
}

var push;
push = max(keyboard_check_released(vk_enter),keyboard_check_released(vk_shift),keyboard_check_released(vk_space), 0);

if (push == 1)
{
show_debug_message("Push was made");
    scr_menu_youngGirl();
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Step Event

///Assign Controlls 
//k_action = vk_space;
k_action = keyboard_check_pressed(vk_space);

//Activate Textbox
//if k_action
//{
    global.tboxActive = true; //Will activate Textbox
    
    if wait == false
    {
        room_goto(rm_overworld);
    }
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Textbox

if global.tboxActive
{
    //(string variable, font, key press, speed)
    sampleText = scr_textbox(sampleText, fnt_default, k_action,2, menu, true); //lower number = faster
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Menu

if global.hasMenu == true

{
 scr_printMenu(menu)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
